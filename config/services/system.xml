<?xml version="1.0" ?>
<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
    <services>

        <!-- RabbitMQ -->
        <service id="app.consumer.service_locator" public="false">
            <argument type="collection">
                <argument key="app.mailer.campaign" type="service" id="app.mailer.campaign" />
                <argument key="app.mailer.transactional" type="service" id="app.mailer.transactional" />
                <argument key="app.mailer.client" type="service" id="app.mailer.client" />
                <argument key="manager" type="service" id="doctrine.orm.entity_manager" />
                <argument key="Psr\Log\LoggerInterface" type="service" id="logger" />
                <argument key="Symfony\Component\Validator\Validator\ValidatorInterface" type="service" id="validator" />
                <argument key="App\Repository\AdherentRepository" type="service" id="App\Repository\AdherentRepository"/>
                <argument key="App\Repository\Projection\ManagedUserRepository" type="service" id="App\Repository\Projection\ManagedUserRepository"/>
            </argument>

            <tag name="container.service_locator" />
        </service>

        <service id="App\Consumer\CampaignMailerConsumer" parent="app.consumer.abstract_mailer_consumer">
            <argument type="service" id="app.consumer.service_locator" />
            <call method="setEmailClient">
                <argument type="service" id="app.mailer.client"/>
            </call>
        </service>

        <service id="App\Consumer\TransactionalMailerConsumer" parent="app.consumer.abstract_mailer_consumer">
            <argument type="service" id="app.consumer.service_locator" />
            <call method="setEmailClient">
                <argument type="service" id="app.mailer.client"/>
            </call>
        </service>

        <service id="app.consumer.abstract_mailer_consumer" class="App\Consumer\AbstractMailerConsumer" parent="app_abstract_consumer">
            <argument type="service" id="app.consumer.service_locator" />
            <call method="setEmailRepository">
                <argument type="service" id="App\Repository\EmailRepository"/>
            </call>
        </service>

        <service id="App\Consumer\MailerConsumer" parent="app_abstract_consumer">
            <call method="setMailerService">
                <argument type="service" id="app.mailer.campaign"/>
            </call>
        </service>

        <service id="app_abstract_consumer" class="App\Consumer\AbstractConsumer" abstract="true">
            <argument type="service" id="validator" />
            <argument type="service" id="doctrine.orm.entity_manager" />
            <call method="setLogger">
                <argument type="service" id="logger" />
            </call>
            <argument type="service" id="app.consumer.service_locator" />
        </service>

        <service id="App\Consumer\ChezVous\AlgoliaConsumer" parent="app_abstract_consumer">
            <argument type="service" id="app.consumer.service_locator" />
            <call method="setCityRepository">
                <argument type="service" id="App\Repository\ChezVous\CityRepository"/>
            </call>
            <call method="setMeasureTypeRepository">
                <argument type="service" id="App\Repository\ChezVous\MeasureTypeRepository"/>
            </call>
            <call method="setAlgoliaIndexer">
                <argument type="service" id="App\Algolia\AlgoliaIndexedEntityManager"/>
            </call>
        </service>

        <!-- Security -->
        <service id="App\Security\AdherentLoginTimestampRecorder">
            <argument type="service" id="doctrine.orm.entity_manager"/>
            <tag name="kernel.event_subscriber"/>
        </service>

        <service id="App\Security\AuthenticationUtils">
            <argument type="service" id="security.token_storage" />
        </service>

        <service id="App\Security\LegacyMigrationListener">
            <argument type="service" id="security.encoder_factory" />
            <argument type="service" id="doctrine.orm.entity_manager" />

            <tag name="kernel.event_listener" event="security.interactive_login" method="onSecurityInteractiveLogin" />
        </service>

        <!-- Cache -->
        <service id="cache.adapter.null" class="Symfony\Component\Cache\Adapter\NullAdapter" abstract="true">
            <argument/>
            <argument/>
            <argument/>
        </service>

        <service id="cache.redis_doctrine_provider" class="Symfony\Component\Cache\DoctrineProvider">
            <argument type="service">
                <service class="Symfony\Component\Cache\Adapter\RedisAdapter">
                    <argument type="service" id="snc_redis.default" />
                    <argument />
                    <argument>86400</argument>
                </service>
            </argument>
        </service>

        <!-- Form -->
        <service id="App\Form\TypeExtension\FormTypeExtension">
            <tag name="form.type_extension" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType" />
        </service>

        <service id="App\Form\TypeExtension\TextTypeExtension">
            <tag name="form.type_extension" extended-type="Symfony\Component\Form\Extension\Core\Type\TextType" />
        </service>

        <service id="App\Form\TypeExtension\PhoneNumberTypeExtension">
            <tag name="form.type_extension" extended-type="Misd\PhoneNumberBundle\Form\Type\PhoneNumberType" />
        </service>

        <!-- Doctrine Listeners -->
        <service id="App\Entity\Listener\ContainingUserDocumentListener" public="true">
            <tag name="doctrine.orm.entity_listener" entity="App\Entity\Event\CommitteeEvent" event="prePersist"/>
            <tag name="doctrine.orm.entity_listener" entity="App\Entity\Event\CommitteeEvent" event="preUpdate"/>
            <tag name="doctrine.orm.entity_listener" entity="App\Entity\Event\CommitteeEvent" event="postUpdate"/>
            <tag name="doctrine.orm.entity_listener" entity="App\Entity\Event\CommitteeEvent" event="preRemove"/>
            <tag name="doctrine.orm.entity_listener" entity="App\Entity\Event\CommitteeEvent" event="postRemove"/>
            <tag name="doctrine.orm.entity_listener" entity="App\Entity\CommitteeFeedItem" event="prePersist"/>
            <tag name="doctrine.orm.entity_listener" entity="App\Entity\CommitteeFeedItem" event="preUpdate"/>
            <tag name="doctrine.orm.entity_listener" entity="App\Entity\CommitteeFeedItem" event="postUpdate"/>
            <tag name="doctrine.orm.entity_listener" entity="App\Entity\CommitteeFeedItem" event="preRemove"/>
            <tag name="doctrine.orm.entity_listener" entity="App\Entity\CommitteeFeedItem" event="postRemove"/>
            <tag name="doctrine.orm.entity_listener" entity="App\Entity\Jecoute\News" event="prePersist"/>
            <tag name="doctrine.orm.entity_listener" entity="App\Entity\Jecoute\News" event="preUpdate"/>
            <tag name="doctrine.orm.entity_listener" entity="App\Entity\Jecoute\News" event="postUpdate"/>
            <tag name="doctrine.orm.entity_listener" entity="App\Entity\Jecoute\News" event="preRemove"/>
            <tag name="doctrine.orm.entity_listener" entity="App\Entity\Jecoute\News" event="postRemove"/>
            <argument type="service" id="App\UserDocument\UserDocumentManager"/>
            <argument>%pattern_uuid%</argument>
        </service>
    </services>
</container>
