parameters:
    locale: fr
    locales: [fr, en]
    pattern_uuid: '[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}'
    pattern_sha1: '[0-9A-Fa-f]{40}'
    pattern_coordinate: '-?\d+(\.\d{1,7})?'
    search_max_results: 30
    enable_canary: '%env(ENABLE_CANARY)%'
    transactional_sender_email: 'contact@parti-renaissance.fr'
    transactional_sender_name: 'Renaissance'
    app_host: '%env(APP_HOST)%'
    national_event_host: '%env(NATIONAL_EVENT_HOST)%'
    user_vox_host: '%env(USER_VOX_HOST)%'
    legislative_host: '%env(LEGISLATIVE_HOST)%'
    vox_host: '%env(VOX_HOST)%'
    besoindeurope_host: '%env(BESOINDEUROPE_HOST)%'
    procuration_host: '%env(PROCURATION_HOST)%'
    renaissance_host: '%env(RENAISSANCE_HOST)%'
    app_renaissance_host: '%env(APP_RENAISSANCE_HOST)%'
    admin_renaissance_host: '%env(ADMIN_RENAISSANCE_HOST)%'
    webhook_renaissance_host: '%env(WEBHOOK_RENAISSANCE_HOST)%'
    production_webhook_host: '%env(PRODUCTION_WEBHOOK_HOST)%'
    api_renaissance_host: '%env(API_RENAISSANCE_HOST)%'
    renaissance_qrcode_host: '%env(RENAISSANCE_QRCODE_HOST)%'
    mooc_base_url: '%env(MOOC_BASE_URL)%'
    api_path_prefix: '%env(API_PATH_PREFIX)%'
    router.request_context.scheme: '%env(APP_SCHEME)%'
    router.request_context.host: '%app_host%'
    image_max_length: 450px
    webhook.email_subscriptions_secret: '%env(APP_EMAIL_SUBSCRIPTIONS_WEBHOOK_SECRET)%'
    adherent_message_referent_limit: 1000
    adherent_message_committee_limit: 1000
    adherent_message_deputy_limit: 1000

services:
    _defaults:
        autowire: true
        autoconfigure: true
        public: false
        bind:
            $environment: '%kernel.environment%'
            $secret: '%kernel.secret%'
            $projectDir: '%kernel.project_dir%'
            $canaryMode: '%env(ENABLE_CANARY)%'
            $mailchimpListId: '%env(MAILCHIMP_MEMBER_LIST_ID)%'
            $mailchimpElectedRepresentativeListId: '%env(MAILCHIMP_ELECTED_REPRESENTATIVE_LIST_ID)%'
            $patternUuid: '%pattern_uuid%'
            $adherentInterests: '%adherent_interests%'
            $mailchimpWebhookKey: '%env(MAILCHIMP_WEBHOOK_KEY)%'
            $renaissanceHost: '%app_renaissance_host%'
            $adminRenaissanceHost: '%admin_renaissance_host%'
            $jemengageHost: '%env(JEMENGAGE_HOST)%'
            $userVoxHost: '%user_vox_host%'
            $invalidEmailHashKey: '%env(INVALID_EMAIL_HASH_KEY)%'
            $unlayerDefaultTemplateId: '%env(UNLAYER_DEFAULT_TEMPLATE_ID)%'
            $goCardlessApiKey: '%env(GOCARDLESS_API_KEY)%'
            $goCardlessEnvironment: '%env(GOCARDLESS_ENV)%'
            $openAIApiKey: '%env(OPENAI_API_KEY)%'
            $friendlyCaptchaEuropeSiteKey: '%env(FRIENDLY_CAPTCHA_EUROPE_SITE_KEY)%'
            $systemPayMode: '%env(SYSTEMPAY_MODE)%'
            $systemPaySiteId: '%env(SYSTEMPAY_SITE_ID)%'
            $systemPayKey: '%env(SYSTEMPAY_KEY)%'
            $appEnvironment: '%env(APP_ENVIRONMENT)%'
            $googlePlaceApiKey: '%env(GMAPS_PRIVATE_API_KEY)%'
            $maxIdleTime: '%env(SESSION_MAX_IDLE_TIME)%'
            $templateWebhookKey: '%env(TEMPLATE_WEBHOOK_KEY)%'
            $telegramChatIdPrimoAdhesion: '%env(TELEGRAM_CHAT_ID_PRIMO_ADHESION)%'
            $telegramChatIdDeclaredMandates: '%env(TELEGRAM_CHAT_ID_DECLARED_MANDATES)%'
            $telegramChatIdNominations: '%env(TELEGRAM_CHAT_ID_NOMINATIONS)%'

    _instanceof:
        App\Adherent\Unregistration\Handlers\UnregistrationAdherentHandlerInterface:
            tags: ['app.adherent.unregistration.handler']
        App\Adherent\Certification\Handlers\CertificationRequestHandlerInterface:
            tags: ['app.adherent.certification_request.handler']
        App\AdherentMessage\MailchimpCampaign\Handler\MailchimpCampaignHandlerInterface:
            tags: ['app.adherent_message.mailchimp.campaign.handler']
        App\AdherentMessage\TransactionalMessage\MessageModifier\MessageModifierInterface:
            tags: ['app.adherent_message.transaction.message_modifier']
        App\AdherentMessage\Sender\SenderInterface:
            tags: ['app.adherent_message.sender']
        Symfony\Component\Messenger\Handler\MessageHandlerInterface:
            tags: ['messenger.message_handler']
        App\Redirection\Dynamic\RedirectToInterface:
            tags: ['app.redirection.handler']
        App\VotingPlatform\AdherentMandate\Factory\AdherentMandateFactoryInterface:
            tags: ['app.voting_platform.mandate_factory']
        App\VotingPlatform\Election\ResultCalculator\ResultCalculatorInterface:
            tags: ['app.voting_platform.result_calculator']
        App\Scope\Generator\ScopeGeneratorInterface:
            tags: ['app.adherent.scope_generator']
        App\JMEFilter\FilterBuilder\FilterBuilderInterface:
            tags: ['app.filter.builder']
        App\OAuth\App\AuthAppUrlGeneratorInterface:
            tags: ['app.auth_app.url_generator']
        App\Recaptcha\RecaptchaApiClientInterface:
            tags: ['app.recaptcha_api_client']
        App\RepublicanSilence\ZoneExtractor\ZoneExtractorInterface:
            tags: ['app.republican_silence.zone_extractor']
        App\Adherent\Tag\TagGenerator\TagGeneratorInterface:
            tags: ['app.adherent.tag.generator']
        App\JeMengage\Timeline\FeedProcessor\FeedProcessorInterface:
            tags: ['app.timeline.feed_processor']
        App\JeMengage\Alert\Provider\AlertProviderInterface:
            tags: ['app.alert_provider']

    # Imports
    App\:
        resource: '../src/*'
        exclude:
            - '../src/Admin'
            - '../src/DependencyInjection'
            - '../src/Entity'
            - '../src/Exception'
            - '../src/Kernel.php'
            - '../src/Mailchimp'
            - '../src/Monolog'

    App\Twig\AssetRuntime:
        arguments:
            $appVersion: '%env(APP_VERSION)%'
            $symfonyAssetExtension: '@twig.extension.assets'
            $mimeTypes: '@mime_types'

    App\Controller\:
        resource: ../src/Controller/
        tags: ['controller.service_arguments']

    App\Controller\Admin\:
        resource: ../src/Controller/Admin
        public: true
        tags: ['controller.service_arguments']

    App\EntityListener\:
        resource: ../src/EntityListener
        tags: ['doctrine.orm.entity_listener']

    # Services

    App\Adherent\Handler\RemoveAdherentAndRelatedDataCommandHandler:
        arguments:
            $handlers: !tagged_iterator 'app.adherent.unregistration.handler'

    App\Adherent\Certification\CertificationRequestProcessCommandHandler:
        arguments:
            $handlers: !tagged_iterator 'app.adherent.certification_request.handler'

    App\Redirection\Dynamic\RedirectionsSubscriber:
        arguments: [!tagged_iterator 'app.redirection.handler']

    App\AdherentMessage\Listener\InitialiseMailchimpCampaignEntitySubscriber:
        arguments:
            [
                !tagged_iterator {
                    tag: 'app.adherent_message.mailchimp.campaign.handler',
                    default_priority_method: getPriority,
                },
            ]

    App\AdherentMessage\Listener\UpdateTransactionalAdherentMessageDataListener:
        arguments:
            [
                !tagged_iterator 'app.adherent_message.transaction.message_modifier',
            ]

    App\AdherentMessage\AdherentMessageManager:
        arguments:
            $senders: !tagged_iterator 'app.adherent_message.sender'

    App\JeMengage\Timeline\DataProvider:
        arguments:
            $processors: !tagged_iterator 'app.timeline.feed_processor'

    App\JeMengage\Alert\AlertProvider:
        arguments:
            $providers: !tagged_iterator 'app.alert_provider'

    App\Adherent\Tag\TagAggregator:
        arguments:
            $generators: !tagged_iterator { tag: 'app.adherent.tag.generator' }

    App\OAuth\App\AuthAppUrlManager:
        arguments:
            [
                !tagged_iterator {
                    tag: 'app.auth_app.url_generator',
                    default_index_method: 'getAppCode',
                },
            ]

    app.ssl_private_key:
        class: League\OAuth2\Server\CryptKey
        arguments:
            $keyPath: '%env(SSL_PRIVATE_KEY)%'
            $keyPermissionsCheck: '%env(bool:SSL_KEY_PERMISSIONS_CHECK)%'

    app.ssl_public_key:
        class: League\OAuth2\Server\CryptKey
        arguments:
            $keyPath: '%env(SSL_PUBLIC_KEY)%'
            $keyPermissionsCheck: '%env(bool:SSL_KEY_PERMISSIONS_CHECK)%'

    App\OAuth\Repository\OAuthUserRepository:
        arguments:
            $userProvider: '@security.user.provider.concrete.users_db'

    App\OAuth\AuthorizationServerFactory:
        arguments:
            $privateKey: '@app.ssl_private_key'
            $encryptionKey: '%env(SSL_ENCRYPTION_KEY)%'
            $accessTokenTtlInterval: '%env(ACCESS_TOKEN_TTL_INTERVAL)%'
            $refreshTokenTtlInterval: '%env(REFRESH_TOKEN_TTL_INTERVAL)%'

    App\AdherentMessage\MessageLimiter:
        arguments:
            - referent: '%adherent_message_referent_limit%'
              committee: '%adherent_message_committee_limit%'
              deputy: '%adherent_message_deputy_limit%'

    App\AdherentMessage\Listener\AdherentMessageChangeSubscriber:
        tags: ['doctrine.event_subscriber']

    App\Normalizer\JecouteDeviceNormalizer:
        tags: [{ name: 'serializer.normalizer', priority: 1 }]

    App\Normalizer\DeviceNormalizer:
        tags: [{ name: 'serializer.normalizer', priority: 10 }]

    App\Normalizer\JecouteRegionNormalizer:
        tags: [{ name: 'serializer.normalizer', priority: 1 }]

    App\Normalizer\ConstraintViolationListNormalizer:
        decorates: 'api_platform.problem.normalizer.validation_exception'
        tags: [{ name: 'serializer.normalizer', priority: -800 }]
        arguments:
            - '@serializer.name_converter.metadata_aware'

    App\Normalizer\Indexer\ThrowExceptionNormalizer:
        tags: [{ name: 'serializer.normalizer', priority: -801 }] # to be just after CustomNormalizer

    App\Scope\GeneralScopeGenerator:
        arguments:
            $generators: !tagged_iterator 'app.adherent.scope_generator'

    App\Algolia\SearchService:
        decorates: 'Algolia\SearchBundle\SearchService'
        arguments:
            - '@.inner'
            - '%kernel.debug%'

    Geocoder\Geocoder: '@bazinga_geocoder.geocoder'

    App\Recaptcha\RecaptchaApiClient:
        arguments:
            $projectId: '%env(GCP_PROJECT_ID)%'
            $defaultSiteKey: '%env(RECAPTCHA_PUBLIC_KEY)%'

    App\Recaptcha\FriendlyCaptchaApiClient:
        arguments:
            $privateKey: '%env(FRIENDLY_CAPTCHA_PRIVATE_KEY)%'
            $defaultSiteKey: '%env(FRIENDLY_CAPTCHA_DEFAULT_SITE_KEY)%'

    App\Validator\RecaptchaValidator:
        arguments: [!tagged_iterator 'app.recaptcha_api_client']

    Lexik\Bundle\PayboxBundle\Paybox\System\Cancellation\Request: '@lexik_paybox.request_cancellation_handler'
    Lexik\Bundle\PayboxBundle\Paybox\System\Base\Request: '@lexik_paybox.request_handler'

    app.paybox.membership_handler:
        class: Lexik\Bundle\PayboxBundle\Paybox\System\Base\Request
        arguments:
            $parameters:
                production: '%env(bool:PAYBOX_PRODUCTION)%'
                site: '%env(PAYBOX_MEMBERSHIP_SITE)%'
                rank: '%env(PAYBOX_MEMBERSHIP_RANK)%'
                login: '%env(PAYBOX_MEMBERSHIP_IDENTIFIER)%'
                currencies:
                    - '978'
                hmac:
                    key: '%env(PAYBOX_MEMBERSHIP_KEY)%'
                    algorithm: sha512
                    signature_name: Sign
            $servers: '%lexik_paybox.servers%'
            $factory: '@form.factory'

    App\Donation\Paybox\PayboxFormFactory:
        arguments:
            $membershipRequestHandler: '@app.paybox.membership_handler'

    League\OAuth2\Server\AuthorizationValidators\AuthorizationValidatorInterface: '@App\OAuth\AuthorizationValidators\JsonWebTokenValidator'
    League\OAuth2\Server\Repositories\AccessTokenRepositoryInterface: '@App\OAuth\Store\AccessTokenStore'
    League\OAuth2\Server\Repositories\UserRepositoryInterface: '@App\OAuth\Repository\OAuthUserRepository'
    League\OAuth2\Server\Repositories\AuthCodeRepositoryInterface: '@App\OAuth\Store\AuthorizationCodeStore'
    League\OAuth2\Server\Repositories\ClientRepositoryInterface: '@App\OAuth\Store\ClientStore'
    League\OAuth2\Server\Repositories\RefreshTokenRepositoryInterface: '@App\OAuth\Store\RefreshTokenStore'
    League\OAuth2\Server\Repositories\ScopeRepositoryInterface: '@App\OAuth\Store\ScopeStore'

    League\OAuth2\Server\AuthorizationServer:
        factory: ['@App\OAuth\AuthorizationServerFactory', 'createServer']

    League\OAuth2\Server\ResourceServer:
        arguments:
            $publicKey: '@app.ssl_public_key'

    Sonata\AdminBundle\Builder\ShowBuilderInterface: '@sonata.admin.builder.orm_show'
    Sonata\Exporter\Exporter: '@sonata.exporter.exporter'

    cache.adapter.redis_tag_aware:
        class: Symfony\Component\Cache\Adapter\RedisTagAwareAdapter
        tags: [{ name: 'cache.pool', provider: 'cache.default_redis_provider' }]
        arguments:
            - ''
            - ''
            - 86400 # 1 day

    redis:
        alias: 'cache.default_redis_provider'

    Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler:
        arguments:
            - '@redis'
            - { ttl: '%env(SESSION_TTL)%', prefix: 'session' }

    App\VotingPlatform\AdherentMandate\AdherentMandateFactory:
        arguments: [!tagged_iterator 'app.voting_platform.mandate_factory']

    App\VotingPlatform\Election\ResultCalculator:
        arguments:
            [
                !tagged_iterator {
                    tag: 'app.voting_platform.result_calculator',
                    default_priority_method: 'getPriority',
                },
            ]

    App\JMEFilter\FiltersGenerator:
        arguments: [!tagged_iterator 'app.filter.builder']

    App\Firebase\JeMarcheMessaging:
        lazy: true

    App\RepublicanSilence\ZoneExtractorFactory:
        arguments: [!tagged_iterator 'app.republican_silence.zone_extractor']

    App\Api\Serializer\RiposteGroupsContextBuilder:
        decorates: 'api_platform.serializer.context_builder'
        arguments: ['@.inner']

    App\Api\Serializer\JecouteNewsGroupsContextBuilder:
        decorates: 'api_platform.serializer.context_builder'
        arguments: ['@.inner']

    App\Api\Serializer\EnforceTypeValidationContextBuilder:
        decorates: 'api_platform.serializer.context_builder'
        arguments: ['@.inner']

    App\Api\Serializer\PrivatePublicContextBuilder:
        decorates: 'api_platform.serializer.context_builder'
        arguments: ['@.inner']

    App\Api\Serializer\CommitteeGroupsContextBuilder:
        decorates: 'api_platform.serializer.context_builder'
        arguments: ['@.inner']

    App\Api\Serializer\DesignationGroupsContextBuilder:
        decorates: 'api_platform.serializer.context_builder'
        arguments: ['@.inner']

    Symfony\Bridge\Monolog\Processor\TokenProcessor:
        tags: ['monolog.processor']
    Symfony\Bridge\Monolog\Processor\SwitchUserTokenProcessor:
        tags: ['monolog.processor']

    App\Normalizer\DateTimeNormalizer:
        decorates: 'serializer.normalizer.datetime'
        arguments: ['@.inner']

    App\Api\IriConverterDecorator:
        decorates: 'api_platform.symfony.iri_converter'
        arguments: ['@.inner']

    App\ErrorRenderer\TwigErrorRenderer:
        decorates: 'twig.error_renderer.html'
        arguments:
            $fallbackErrorRenderer: '@.inner'
            $debug: !service
                class: 'bool'
                factory: Symfony\Bridge\Twig\ErrorRenderer\TwigErrorRenderer::isDebug
                arguments:
                    - '@request_stack'
                    - '%kernel.debug%'
                    -
    App\FranceCities\CitiesStorageInterface: '@App\FranceCities\CitiesStorage'

    App\FranceCities\CachedCitiesStorage:
        decorates: App\FranceCities\CitiesStorage
        arguments:
            $decorated: '@.inner'
            $cache: !service
                class: Symfony\Component\Cache\Psr16Cache
                arguments:
                    - '@app.cache.france_cities'

    # SonataAdmin requests public `logger` service
    logger:
        alias: 'monolog.logger'
        public: true

    App\Mailer\SenderMessageMapper:
        arguments:
            - App\Mailer\Message\Renaissance\RenaissanceMessageInterface:
                  name: Renaissance
                  email: '%env(RENAISSANCE_SENDER_EMAIL)%'

    App\Donation\Request\DonationRequestUtils:
        arguments:
            $tokenManager: '@App\Security\SimpleCsrfTokenManager'

    App\Mailer\EmailTemplateFactory:
        arguments:
            $senderEmail: '%transactional_sender_email%'
            $senderName: '%transactional_sender_name%'

    App\Mandrill\EmailClient:
        arguments:
            $apiKey: '%env(MANDRILL_API_KEY)%'
            $testApiKey: '%env(MANDRILL_TEST_API_KEY)%'

    App\Messenger\AmqpTransport\AmqpTransportFactory:
        decorates: 'messenger.transport.amqp.factory'
        arguments: ['@.inner']

    League\Glide\Responses\SymfonyResponseFactory: ~

    League\Glide\Server:
        factory: League\Glide\ServerFactory::create
        arguments:
            - source: '@League\Flysystem\FilesystemOperator'
              cache: '%kernel.cache_dir%'
              response: '@League\Glide\Responses\SymfonyResponseFactory'
              max_image_size: 4000000 # Max image size in number of pixels (2000x2000)

    App\Security\Http\LoginLink\LoginLinkHandler:
        decorates: 'security.authenticator.login_link_handler.main'
        arguments: ['@.inner']

    App\Security\ApiAuthenticationEntryPoint:
        arguments: ['@security.authenticator.form_login.main']

    Symfony\Component\Security\Http\LoginLink\LoginLinkHandlerInterface: '@App\Security\Http\LoginLink\LoginLinkHandler'

    App\Security\Http\LoginLink\Authentication\DefaultAuthenticationSuccessHandler:
        decorates: 'security.authentication.success_handler.main.login_link'
        arguments: ['@.inner']
