{% for votePlace in vote_places %}
    {% set availablePlaces = constant('App\\Entity\\VotePlace::MAX_ASSESSOR_REQUESTS') - availabilities[votePlace.getId()].holder_count - availabilities[votePlace.getId()].substitute_count %}
    <tr>
        <td class="datagrid__table__col--hide-mobile">
            {{ votePlace.id }}
        </td>
        <td class="datagrid__table__col--left">
            <strong>{{ votePlace.name ~ ' ' ~ votePlace.code }}</strong>
            <br/>
            <span class="datagrid__table__col--hide-mobile">
                <em>Adresse :</em>
                {{ votePlace.postalCode }} {{ votePlace.cityName }} {{ votePlace.country }}
            </span>
        </td>
        <td class="datagrid__table__col--left">
            {{ availablePlaces }}
        </td>
        <td>
            {% if availablePlaces > 0 %}
                <ul>
                    {% if availabilities[votePlace.getId()].holder_count < 1 %}
                        <li>{{ 'assessor_request.office.holder.label'|trans }}</li>
                    {% endif %}
                    {% if availabilities[votePlace.getId()].substitute_count < 1 %}
                        <li>{{ 'assessor_request.office.substitute.label'|trans }}</li>
                    {% endif %}
                </ul>
            {% else %}
                {{ 'vote_place.availability:none'|trans }}
            {% endif %}
        </td>
        <td>
            {% if availablePlaces != constant('App\\Entity\\VotePlace::MAX_ASSESSOR_REQUESTS') %}
                {% for row in availabilities[votePlace.getId()].holder_uuids|split(',')|filter(i => i)|merge(availabilities[votePlace.getId()].substitute_uuids|split(',')|filter(i => i)) %}
                    {% set parts = row|split('|') %}
                    Associé à la demande de <a href="{{ path('app_assessor_manager_request', { uuid: parts[0] }) }}">{{ parts[1] }} {{ parts[2] }}</a><br>
                {% endfor %}
            {% else %}
                <strong>Disponible</strong>
            {% endif %}
        </td>
    </tr>
{% endfor %}
