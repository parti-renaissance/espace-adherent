{% extends '@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig' %}

{% macro display_tags(tags) %}
    <label>Labels</label><br/>

    {% if tags is not empty %}
        {{ include('admin/adherent/_tags.html.twig', {tags: tags}) }}
    {% else %}
        ~
    {% endif %}
{% endmacro %}

{% block measure_entry_row %}
    <div class="row">
        <div class="col-xs-4">
            {{ form_row(form.key, {required: true}) }}
        </div>
        <div class="col-xs-4">
            {{ form_row(form.value, {required: true}) }}
        </div>
    </div>
{% endblock %}

{% block app_admin_administrator_administratorRoles_entity_widget %}
    <div {{ block('widget_container_attributes') }}>
        {%- for group_label, group in choices %}
            {%- if group is iterable -%}
                <div>
                    <h4>
                        <i class="fa fa-angle-double-right" aria-hidden="true"></i>
                        {{ ('administrator.role.group_code.' ~ group_label)|trans({}, translation_domain) }}
                    </h4>
                    {% for key, choice in group %}
                        <div>
                            {{- form_widget(form[key], {role: choice.data}) -}}
                        </div>
                    {% endfor %}
                </div>
            {% endif %}
        {% endfor -%}
    </div>
{% endblock %}

{% block app_admin_administrator_checkbox_administratorRoles_administratorRoles_entry_label %}
    <label{% for attrname, attrvalue in label_attr %} {{ attrname }}="{{ attrvalue }}"{% endfor %} style="display: block;">
        <div class="row">
            <div class="col-xs-1" style="padding-top: 10px;">
                {{- widget|raw -}}
            </div>
            <div class="col-xs-11">
                <h4>{{ role.label }}</h4>
                <code>{{ role.code }}</code>
            </div>
        </div>
    </label>

    <div class="row">
        <div class="col-xs-11 col-xs-offset-1">
            <p>{{ role.description }}</p>
        </div>
    </div>
{% endblock %}

{% block app_admin_administrator_checkbox_administratorRoles_options_widget %}
    <div {{ block('widget_container_attributes') }}>
        {% for group_label, group in choices %}
            {%- if group is iterable -%}
                <div>
                    <label><b>{{ group_label|trans({}, translation_domain) }}</b></label>
                    {% for key, choice in group %}
                        <div>
                            {{- form_widget(form[key]) -}}
                            {{- form_label(form[key]) -}}
                        </div>
                    {% endfor %}
                </div>
            {%- endif -%}
        {% endfor %}
    </div>
{% endblock %}

{% block app_admin_donator_referenceDonation_entity_widget %}
    {% import 'admin/donation/_macros.html.twig' as macros %}

    {% set donator = form.parent.vars.value %}
    {% set currentReferenceDonation = donator.referenceDonation %}
    {% set currentValue = currentReferenceDonation ? currentReferenceDonation.id : null %}
    <table class="table table-bordered table-striped sonata-ba-list">
        <thead>
            <tr class="sonata-ba-list-field-header">
                <th class="sonata-ba-list-field-header-text">Don de<br>référence</th>
                <th class="sonata-ba-list-field-header-text">Montant</th>
                <th class="sonata-ba-list-field-header-text">Cotisation</th>
                <th class="sonata-ba-list-field-header-text">Type</th>
                <th class="sonata-ba-list-field-header-text">Date</th>
                <th class="sonata-ba-list-field-header-text">Status</th>
                <th class="sonata-ba-list-field-header-text">Transactions</th>
                <th class="sonata-ba-list-field-header-text">Détails</th>
                <th class="sonata-ba-list-field-header-text" width="200px">Action</th>
            </tr>
        </thead>
        <tbody>
            {% for choice in form.children %}
                <tr>
                    <td class="sonata-ba-list-field sonata-ba-list-field-text">
                        <div class="radio">
                            <label>
                                <input type="radio"
                                       id="{{ choice.vars.id }}"
                                       name="{{ choice.vars.full_name }}"
                                       value="{{ choice.vars.value }}"
                                        {% if currentValue == choice.vars.value %} checked {% endif %}
                                />
                            </label>
                        </div>
                    </td>
                    {% if choice.vars.value %}
                        {% set donation = form.vars.choices[choice.vars.value].data %}

                        <td class="sonata-ba-list-field sonata-ba-list-field-text">
                            {{ donation.amountInEuros|format_currency('EUR') }}
                        </td>
                        <td class="sonata-ba-list-field sonata-ba-list-field-text">
                            {% if donation.isMembership %}
                                <span class="label label-success">oui</span>
                            {% else %}
                                <span class="label label-danger">non</span>
                            {% endif %}
                        </td>
                        <td class="sonata-ba-list-field sonata-ba-list-field-text">
                            {{ macros.get_donation_type_badge(donation.type) }}
                        </td>
                        <td class="sonata-ba-list-field sonata-ba-list-field-text">
                            {{ donation.donatedAt|format_datetime }}
                        </td>
                        <td class="sonata-ba-list-field sonata-ba-list-field-text">
                            {{ macros.get_donation_status_badge(donation.status) }}
                        </td>
                        <td class="sonata-ba-list-field sonata-ba-list-field-text">
                            {% if donation.type is constant('App\\Entity\\Donation::TYPE_CB') and not donation.transactions.isEmpty %}
                                <ol>
                                    {% for transaction in donation.transactions %}
                                        <li>
                                            <span class="badge {% if transaction.isSuccessful %}bg-green{% else %}bg-red{% endif %}">
                                                {{ ('transaction.result_code.' ~ transaction.payboxResultCode)|trans }}
                                            </span>
                                            le {{ transaction.payboxDateTime|format_datetime }}
                                        </li>
                                    {% endfor %}
                                </ol>
                            {% endif %}
                        </td>
                        <td class="sonata-ba-list-field sonata-ba-list-field-text">
                            <strong>Adresse :</strong> {{ donation.getInlineFormattedAddress }}
                            <br>
                            <strong>Nationalité :</strong> {{ donation.nationality }}
                            {% if donation.utmSource or donation.utmCampaign %}
                                <br>
                                <strong>UTM Source :</strong> {{ donation.utmSource }}
                                <br>
                                <strong>UTM Campagne :</strong> {{ donation.utmCampaign }}
                            {% endif %}
                        </td>
                        <td class="sonata-ba-list-field sonata-ba-list-field-text">
                            <a href="{{ path('admin_app_donation_edit', {id: choice.vars.value}) }}" target="_blank">
                                Voir le détail
                            </a>
                        </td>
                    {% else %}
                        <td class="sonata-ba-list-field sonata-ba-list-field-text" colspan="8">
                            {{ choice.vars.label }}
                        </td>
                    {% endif %}
                </tr>
            {% endfor %}
            <tr>
                <th class="sonata-ba-list-field-header-text">Montant total donné</th>
                <td class="sonata-ba-list-field sonata-ba-list-field-text">
                    {{ donator.getTotalDonated|format_currency('EUR') }}
                </td>
            </tr>
        </tbody>
    </table>
{% endblock %}

{% block app_admin_donation_file_row -%}
    {{ block('form_row') }}

    {% set object = form.parent.vars.value %}
    {% if object.filename is defined and object.filename is not empty %}
        <a href="{{ path('app_admin_donation_file', {id: object.id}) }}" target="_blank">
            <i class="fa fa-link" aria-hidden="true"></i> Voir le fichier téléchargé
        </a>
    {% endif %}
{% endblock %}

{% block app_admin_elected_representative_mandate_geoZone_zone_widget %}
    <div class="row">
        <div class="form-group">
            <div class="sonata-ba-field sonata-ba-field-standard-natural">
                <input type="text" value="{{ form.vars.zone_label }}" id="{{ form.vars.id }}_autocomplete" class="form-control"/>
            </div>
        </div>
        {{ form_row(form) }}
    </div>
{% endblock %}

{% block app_admin_elected_representative_mandates_sonata_type_collection_row -%}
    <div class="mandates-collection">
        {{ block('form_row') }}
    </div>

    <div class="help-inline">
        Pour supprimer des mandats, vous devez supprimer aussi les fonctions associées à ces mandats.
    </div>

    <script type="text/javascript">
        $(document).ready(function() {
            $("div.mandates-collection").on('ifToggled change', "select[id$='_isElected'], input[id$='_onGoing']", function() {
                var elementId = $(this).attr('id');
                if (elementId.includes('_isElected')) {
                    var isElected = $(this);
                    var onGoing = $('#'+elementId.replace('isElected', 'onGoing'));
                    var finishAt = $('#'+elementId.replace('isElected', 'finishAt'));
                } else {
                    var isElected = $('#'+elementId.replace('onGoing', 'isElected'));
                    var onGoing = $(this);
                    var finishAt = $('#'+elementId.replace('onGoing', 'finishAt'));
                }
                finishAt.prop('disabled', ('1' !== isElected.val() || onGoing.is(':checked')));
            });

            $("div.icheckbox_square-blue input[id$='_onGoing']").trigger('change');
            $("select[id$='_isElected']").trigger('ifToggled');

            $('div.mandates-collection').on('sonata.add_element', function () {

                $("div.icheckbox_square-blue input[id$='_onGoing']").trigger('change');
                $("select[id$='_isElected']").trigger('ifToggled');

                addAutocomplete();
            });

            var addAutocomplete = function () {
                $("input[id$='_geoZone_autocomplete']").each(function (i, el) {
                    el = $(el);
                    el.autocomplete({
                        source: function(request, response) {
                            var elementId = el.attr('id');
                            var id = elementId.substr(0, elementId.indexOf('_geoZone_autocomplete'));
                            var type = el.parents('.row').find("select[id$='" + id + "_type']").val();
                            var term = request.term.trim();

                            if (term.length > 0) {
                                $.get("{{ path('app_admin_zone_autocomplete')|raw }}?zone=" + term + "&type=" + type, function(data) {
                                    response($.map(data, function(m) {
                                        return {
                                            label: m.name_code,
                                            value: m.id
                                        };
                                    }));
                                });
                            } else {
                                response([]);
                            }
                        },
                        select: function( event, ui ) {
                            var elementId = el.attr('id');
                            var id = elementId.substr(0, elementId.indexOf('_geoZone'));
                            var zoneIdField = el.parents('.row').find("input[id$='" + id + "_geoZone']");
                            $(el).val(ui.item.label);
                            $(zoneIdField).val(ui.item.value);

                            return false;
                        },
                    });
                });
            };

            addAutocomplete();
        });
    </script>
{% endblock %}

{% block app_admin_elected_representative_politicalFunctions_sonata_type_collection_politicalFunctions_row -%}
    <div class="political-functions-collection">
        {{ block('form_row') }}
    </div>

    <script type="text/javascript">
        $(document).ready(function() {
            $("div.political-functions-collection").on('ifToggled', "input[id$='_onGoing']", function() {
                var onGoingId = $(this).attr('id');
                $('#'+onGoingId.replace('onGoing', 'finishAt')).prop('disabled', $(this).is(':checked'));
            });

            $("div.icheckbox_square-blue input[id$='_onGoing']").trigger('ifToggled');
            $('div.political-functions-collection').on('sonata.add_element', function () {
                $("div.icheckbox_square-blue input[id$='_onGoing']").trigger('ifToggled');
            });
        });
    </script>
{% endblock %}

{% block app_admin_elected_representative_label_name_text_widget -%}
    {% set shouldSetOther = form.vars.value is not empty and form.vars.value not in constant('App\\Entity\\ElectedRepresentative\\LabelNameEnum::ALL') %}
    <select id="{{ form.vars.id }}-label-names" class="filter__field form form__field">
        <option value="" {{ form.vars.value is not empty ? 'selected="selected"' }}></option>
        {% for key, label in constant('App\\Entity\\ElectedRepresentative\\LabelNameEnum::ALL') %}
            <option value="{{ label }}" {{ form.vars.value == label or (shouldSetOther and label == constant('App\\Entity\\ElectedRepresentative\\LabelNameEnum::OTHER')) ? 'selected="selected"' }}>{{ label }}</option>
        {% endfor %}
    </select>
    {{ form_widget(form, {attr: {style: 'margin-top: 15px;'}}) }}

    <script type="text/javascript">
        $(document).ready(function() {
            var other = '{{ constant('App\\Entity\\ElectedRepresentative\\LabelNameEnum::OTHER') }}';
            var labelNamesSelect = $('#{{ form.vars.id }}-label-names');
            {% if form.vars.value is not empty and form.vars.value not in constant('App\\Entity\\ElectedRepresentative\\LabelNameEnum::ALL') %}
            $(labelNamesSelect).val(other);
            {% endif %}

            var toggleLabel = function(setEmpty = false) {
                var selectedValue = $(labelNamesSelect).val();
                if (selectedValue === other) {
                    if (setEmpty) {
                        $('#{{ form.vars.id }}').val('');
                    }
                    $('#{{ form.vars.id }}').show();
                } else {
                    $('#{{ form.vars.id }}').hide();
                    $('#{{ form.vars.id }}').val(selectedValue);
                }
            };

            labelNamesSelect.change(function() {
                toggleLabel(true);
            });

            toggleLabel();
        });
    </script>
{% endblock %}

{% block app_admin_elected_representative_labels_sonata_type_collection_labels_row -%}
    <div class="elected-representative-labels-collection">
        {{ block('form_row') }}
    </div>

    <script type="text/javascript">
        $(document).ready(function() {
            $("div.elected-representative-labels-collection").on('ifToggled', "input[id$='_onGoing']", function() {
                var onGoingId = $(this).attr('id');
                var id = onGoingId.substr(0, onGoingId.indexOf('_onGoing'));
                id = id.substr(id.length - 1);

                if ($(this).is(':checked')) {
                    $(this).parents('.row').find("div[id$='" + id + "_finishYear']").addClass('select2-container-disabled');
                } else {
                    $(this).parents('.row').find("div[id$='" + id + "_finishYear']").removeClass('select2-container-disabled');
                }
            });

            $("div.icheckbox_square-blue input[id$='_onGoing']").trigger('ifToggled');
            $('div.elected-representative-labels-collection').on('sonata.add_element', function () {
                $("div.icheckbox_square-blue input[id$='_onGoing']").trigger('ifToggled');
            });
        });
    </script>
{% endblock %}

{% block app_admin_elected_representative_sponsorships_sonata_type_native_collection_sponsorships_widget -%}
    <table class="table table-bordered table-striped sonata-ba-list">
        <thead>
        <tr class="sonata-ba-list-field-header">
            <th class="sonata-ba-list-field-header-text col-md-3">Élection présidentielle</th>
            <th class="sonata-ba-list-field-header-text">Candidat</th>
        </tr>
        </thead>
        <tbody>
            {{ form_widget(form) }}
        </tbody>
    </table>
{% endblock %}

{% block app_admin_elected_representative_sponsorship_sponsorships_sponsorships_entry_widget -%}
    <tr>
        <td class="sonata-ba-list-field sonata-ba-list-field-text col-md-3">
            {{ form_row(form.presidentialElectionYear) }}
        </td>
        <td class="sonata-ba-list-field sonata-ba-list-field-text">
            {% set years = constant('App\\Entity\\ElectedRepresentative\\CandidateNameEnum::ALL') %}
            {% set candidates = years[form.presidentialElectionYear.vars.value] %}
            {% set shouldSetOther = form.candidate.vars.value is not empty and form.candidate.vars.value not in candidates %}
            <select id="{{ form.candidate.vars.id }}-candidate-names" class="filter__field form form__field">
                <option value="" {{ form.candidate.vars.value is not empty ? 'selected="selected"' }}></option>

                {% for year, candidates in constant('App\\Entity\\ElectedRepresentative\\CandidateNameEnum::ALL') %}
                    <optgroup label="{{ year }}">
                        {% for candidate in candidates %}
                            <option value="{{ candidate }}" {{ form.candidate.vars.value == candidate or (shouldSetOther and candidate == constant('App\\Entity\\ElectedRepresentative\\CandidateNameEnum::OTHER')) ? 'selected="selected"' }}>{{ candidate }}</option>
                        {% endfor %}
                    </optgroup>
                {% endfor %}

            </select>
            {{ form_row(form.candidate, {attr: {style: 'margin-top: 15px;'}}) }}
        </td>
    </tr>

    <script type="text/javascript">
        $(document).ready(function() {
            var other = '{{ constant('App\\Entity\\ElectedRepresentative\\CandidateNameEnum::OTHER') }}';
            var year = $('#{{ form.presidentialElectionYear.vars.id }}').val();
            var candidateNamesSelect = $('#{{ form.candidate.vars.id }}-candidate-names');
            candidateNamesSelect.find("optgroup:not([label='" + year + "'])").remove();
            {% if shouldSetOther %}
                candidateNamesSelect.val(other);
            {% endif %}

            var toggleLabel = function(setEmpty = false) {
                var selectedValue = candidateNamesSelect.val();
                if (selectedValue === other) {
                    if (setEmpty) {
                        $('#{{ form.candidate.vars.id }}').val('');
                    }
                    $('#{{ form.candidate.vars.id }}').show();
                } else {
                    $('#{{ form.candidate.vars.id }}').hide();
                    $('#{{ form.candidate.vars.id }}').val(selectedValue);
                }
            };

            candidateNamesSelect.change(function() {
                toggleLabel(true);
            });

            toggleLabel();
        });
    </script>
{% endblock %}

{% block app_admin_mooc_mooc_image_row -%}
    {{ block('admin_image_with_url_row') }}
{% endblock %}

{% block app_admin_mooc_element_image_row -%}
    {{ block('admin_image_with_url_row') }}
{% endblock %}

{% block app_admin_national_event_file_row %}
    {% set value = form.parent.vars.value %}
    {% set path = value.intoImagePath ? ('static' ~ value.intoImagePath) : null %}

    {{ block('admin_image_with_url_row') }}
{% endblock %}

{% block admin_image_with_url_row %}
    {{ block('form_row') }}

    {% if value %}
        {% if path is not defined %}
            {% set path = value is instanceof('App\\Entity\\ImageOwnerInterface') ? value.getImagePath() : value.getFilePath() %}
        {% endif %}

        {% if path %}
            <div>
                <p><em>Image actuelle :</em></p>
                <p class="text-center">
                    <img class="img-thumbnail" src="{{ path('asset_url', {path: path}) }}">
                </p>
            </div>
        {% endif %}
    {% endif %}
{% endblock %}

{% block city_manager_row %}
    <tr>
        <td class="sonata-ba-list-field sonata-ba-list-field-text">
            {{ form_label(form) }}
        </td>
        <td class="sonata-ba-list-field sonata-ba-list-field-text">
            {{ form_widget(form.name) }}
            {{ form_errors(form.name) }}
        </td>
        <td class="sonata-ba-list-field sonata-ba-list-field-text">
            <div class="row">
                <div class="col-md-6">
                    {{ form_widget(form.phone.country) }}
                </div>
                <div class="col-xs-12 col-md-6">
                    {{ form_widget(form.phone.number) }}
                </div>
                {{ form_errors(form.phone) }}
            </div>
        </td>
    </tr>
{% endblock %}

{% block city_prevision_row %}
    <tr>
        <td class="sonata-ba-list-field sonata-ba-list-field-text">
            {{ form_label(form) }}
        </td>
        <td class="sonata-ba-list-field sonata-ba-list-field-text">
            {{ form_widget(form.strategy) }}
            {{ form_errors(form.strategy) }}
        </td>
        <td class="sonata-ba-list-field sonata-ba-list-field-text">
            {{ form_widget(form.name) }}
            {{ form_errors(form.name) }}
        </td>
        <td class="sonata-ba-list-field sonata-ba-list-field-text">
            {{ form_widget(form.alliances) }}
            {{ form_errors(form.alliances) }}
        </td>
        <td class="sonata-ba-list-field sonata-ba-list-field-text">
            {{ form_widget(form.allies) }}
            {{ form_errors(form.allies) }}
        </td>
        <td class="sonata-ba-list-field sonata-ba-list-field-text">
            {{ form_widget(form.validatedBy) }}
            {{ form_errors(form.validatedBy) }}
        </td>
    </tr>
{% endblock %}

{% block city_candidate_row %}
    <tr>
        <td class="sonata-ba-list-field sonata-ba-list-field-text">
            {{ form_widget(form.investitureType) }}
            {{ form_errors(form.investitureType) }}
        </td>
        <td class="sonata-ba-list-field sonata-ba-list-field-text">
            {{ form_widget(form.name) }}
            {{ form_errors(form.name) }}
        </td>
        <td class="sonata-ba-list-field sonata-ba-list-field-text">
            {{ form_widget(form.gender) }}
            {{ form_errors(form.gender) }}
        </td>
        <td class="sonata-ba-list-field sonata-ba-list-field-text">
            {{ form_widget(form.politicalScheme) }}
            {{ form_errors(form.politicalScheme) }}
        </td>
        <td class="sonata-ba-list-field sonata-ba-list-field-text">
            {{ form_row(form.agreement) }}
        </td>
    </tr>
    <tr>
        <td class="sonata-ba-list-field sonata-ba-list-field-text">
        </td>
        <td class="sonata-ba-list-field sonata-ba-list-field-text">
            {{ form_widget(form.phone) }}
            {{ form_errors(form.phone) }}
        </td>
        <td class="sonata-ba-list-field sonata-ba-list-field-text">
            {{ form_widget(form.email) }}
            {{ form_errors(form.email) }}
        </td>
        <td class="sonata-ba-list-field sonata-ba-list-field-text">
            {{ form_widget(form.profile) }}
            {{ form_errors(form.profile) }}
        </td>
        <td class="sonata-ba-list-field sonata-ba-list-field-text">
            {{ form_widget(form.alliances) }}
            {{ form_errors(form.alliances) }}
        </td>
        <td class="sonata-ba-list-field sonata-ba-list-field-text">
            {{ form_widget(form.eligibleAdvisersCount) }}
            {{ form_errors(form.eligibleAdvisersCount) }}
        </td>
    </tr>
{% endblock %}

{% block app_admin_adherent_contributionStatus_text_widget %}
    {% set adherent = form.parent.vars.value %}

    {{ include('admin/adherent/partial/_contributions.html.twig', {adherent: adherent}) }}
{% endblock %}

{% block app_admin_adherent_donations_hidden_widget %}
    {% set adherent = form.parent.vars.value %}

    {{ include('admin/adherent/partial/_donations.html.twig', {adherent: adherent}) }}
{% endblock %}

{% block app_admin_file_file_parent_widget %}
    {{ form_widget(form) }}

    <script type="text/javascript">
        $(document).ready(function() {
            var addAutocomplete = function () {
                $("#{{ form.vars.id }}").each(function (i, el) {
                    el = $(el);
                    el.autocomplete({
                        source: function(request, response) {
                            var term = request.term.trim();

                            if (term.length > 0) {
                                $.get("{{ path('app_admin_files_autocomplete_file_directory')|raw }}?term=" + term, function(data) {
                                    response($.map(data, function(d) {
                                        return {
                                            label: d.name,
                                            value: d.id
                                        };
                                    }));
                                });
                            } else {
                                response([]);
                            }
                        },
                        select: function( event, ui ) {
                            $(el).val(ui.item.label);

                            return false;
                        },
                    });
                });
            };

            addAutocomplete();
        });
    </script>
{% endblock %}

{% block app_admin_jecoute_riposte_sourceUrl_url_row -%}
    {{ block('form_row') }}

    {% set object = form.parent.vars.value %}
    {% set openGraph = object.openGraph %}
    {% if object.openGraph is not empty %}
        <div class="well">
            <div class="media">
                <div class="media-left">
                    {% if openGraph.image is defined and openGraph.image is not null %}
                        <img class="media-object" style="max-width: 100px;" src="{{ openGraph.image }}">
                    {% endif %}
                </div>
                <div class="media-body">
                    {% if openGraph.title is defined and openGraph.title is not null %}
                        <h4 class="media-heading">{{ openGraph.title }}</h4>
                    {% endif %}
                    {% if openGraph.description is defined and openGraph.description is not null %}
                        {{ openGraph.description[:50] }}
                        {%- if openGraph.description|length > 50 %}...{% endif %}
                    {% endif %}
                </div>
            </div>
        </div>
    {% endif %}
{% endblock %}

{% block app_admin_adherent_subscriptionTypes_entity_row %}
    {% set object = form.parent.vars.data %}
    <span class="text-bold">Abonnement Mailchimp</span>
    <p>{{ include('admin/adherent/partial/_email_subscription_status.html.twig') }}</p>

    {{ block('form_row') }}

    <a href="{{ form.vars.sonata_admin.admin.generateObjectUrl('send_resubscribe_email', object) }}" class="btn btn-primary">Envoyer un email de réabonnement</a>
{% endblock %}

{% block app_admin_adherent_lastMembershipDonationDate_hidden_row %}
    {% set object = form.parent.vars.data %}
    {% if object.getFirstMembershipDonation() %}
        <div>
            <span class="text-bold">Première cotisation :</span> {{ object.getFirstMembershipDonation()|date('d/m/Y H:i:s') }}
        </div>
    {% endif %}
    {% if object.getLastMembershipDonation() %}
        <div>
            <span class="text-bold">Dernière cotisation :</span> {{ object.getLastMembershipDonation()|date('d/m/Y H:i:s') }}
        </div>
    {% endif %}
{% endblock %}

{% block app_admin_adherent_tags_hidden_widget %}
    {% set object = form.parent.vars.data %}

    {{ _self.display_tags(object.tags) }}
{% endblock %}

{% block app_admin_adherent_elected_representative_tags_hidden_widget %}
    {% set object = form.parent.vars.data %}

    {{ _self.display_tags(object.tags) }}
{% endblock %}

{% block unlayer_content_widget %}
    {{ form_row(form) }}

    <div id="unlayer-{{ form.vars.id }}" style="height: 900px;"></div>

    <script src="https://editor.unlayer.com/embed.js"></script>

    <script type="text/javascript">
        var form = document.querySelector('.sonata-ba-form form');
        var contentElement = document.querySelector('#{{ form.vars.id }}');
        var jsonContentElement = document.querySelector('input[name*="jsonContent"]');

        unlayer.init({
            id: "unlayer-{{ form.vars.id }}",
            projectId: {{ unlayer_project_id }},
            locale: 'fr-FR',
            displayMode: 'email',
            designMode: 'edit',
            appearance: {
                theme: 'modern_dark',
            },
            user: {
                id: '{{ app.user.getEmailAddress() }}',
                email: '{{ app.user.getEmailAddress() }}',
            },
        });

        var loadDefaultTemplate = true;

        if (jsonContentElement.value) {
            var design = JSON.parse(jsonContentElement.value);
            if (design) {
                loadDefaultTemplate = false;
                unlayer.loadDesign(design)
            }
        }

        if (loadDefaultTemplate) {
            unlayer.loadTemplate({{ form.vars.unlayer_template_id }});
        }

        form.addEventListener('submit', function (event) {
            event.preventDefault();

            unlayer.exportHtml(
                function (data) {
                    jsonContentElement.value = JSON.stringify(data.design);
                    contentElement.value = data.html.substring(
                        data.html.indexOf('<style'),
                        data.html.indexOf('</style>') + 8
                    ) + data.html.substring(
                        data.html.indexOf('<body>') + 6,
                        data.html.indexOf('</body>')
                    )
                    event.target.submit();
                },
                { minify: true }
            );
        })
    </script>
{% endblock %}

{% block app_admin_local_election_candidacies_group_file_row %}
    {{ block('form_row') }}

    {% set candidacies_group = form.parent.vars.data %}

    {% if candidacies_group.hasFaithStatementFile() %}
        <div class="form-group">
            <label>URL</label>
            <div class="sonata-ba-field">
                <input class="form-control" readonly="readonly" type="text" value="{{ url('asset_url', {path: candidacies_group.getFaithStatementFilePath(), app_domain: app_renaissance_host}) }}" />
            </div>
        </div>

        <div>
            <object type="application/pdf" data="{{ path('asset_url', {path: candidacies_group.getFaithStatementFilePath(), app_domain: app_renaissance_host}) }}" style="width:100%;height:100vh;max-height:700px">
                <div style="background: #2e2e2e;color:white;text-align:center;padding: 20px 0">
                    <p>Il semble que votre navigateur ne peut pas afficher ce fichier.</p>
                    <p>Vous pouvez le télécharger en <a href="{{ url('asset_url', {path: candidacies_group.getFaithStatementFilePath(), app_domain: app_renaissance_host}) }}" target="_blank">cliquant ici</a>.</p>
                </div>
            </object>
        </div>
    {% endif %}
{% endblock %}

{% block simple_mde_content_widget %}
    {{ form_widget(form) }}

    <script type="text/javascript">
        setTimeout(function () {
            if (window.simpleMdeInstances === undefined) {
                window.simpleMdeInstances = [];
            }

            window.simpleMdeInstances['{{ form.vars.id }}'] = new SimpleMDE({
                element: document.querySelector('#{{ form.vars.id }}'),
                spellChecker: false,
                renderingConfig: {
                    singleLineBreaks: false
                },
                previewConfig: {
                    useIframe: true,
                    editorCss: [
                        '{{ webpack_asset('kernel.css') }}',
                        '{{ asset('css/simplemde.inside.css') }}'
                    ],
                },
                toolbar: [
                    {
                        name: "fullscreen",
                        action: function() {
                            window.simpleMdeInstances['{{ form.vars.id }}'].toggleSideBySide();
                            window.simpleMdeInstances['{{ form.vars.id }}'].toggleFullScreen();
                        },
                        className: "fa fa-eye",
                        title: "Plein écran avec prévisualisation"
                    },
                    "|",
                    {
                        name: "bold",
                        action: SimpleMDE.toggleBold,
                        className: "fa fa-bold",
                        title: "Gras"
                    },
                    {
                        name: "italic",
                        action: SimpleMDE.toggleItalic,
                        className: "fa fa-italic",
                        title: "Italique"
                    },
                    {
                        name: "title",
                        action: SimpleMDE.toggleHeading3,
                        className: "fa fa-header",
                        title: "Titre"
                    },
                    "|",
                    {
                        name: "unordered-list",
                        action: SimpleMDE.toggleUnorderedList,
                        className: "fa fa-list-ul",
                        title: "Liste à puces"
                    },
                    {
                        name: "ordered-list",
                        action: SimpleMDE.toggleUnorderedList,
                        className: "fa fa-list-ol",
                        title: "Liste à chiffres"
                    },
                    "|",
                    {
                        name: "horizontal-rule",
                        action: SimpleMDE.drawHorizontalRule,
                        className: "fa fa-minus",
                        title: "Barre de séparation horizontale"
                    },
                    "|",
                    "side-by-side"
                ],
            });
        }, 1000);
    </script>
{% endblock %}

{% block app_admin_voting_platform_designation_wordingWelcomePage_sonata_type_model_widget %}
    {{ form_widget(form) }}

    {% if form.vars.data and form.vars.data.content %}
        <div style="margin-top: 20px">
            <p><a href="{{ path('admin_app_cmsblock_edit', {id: form.vars.value}) }}">Modifier</a></p>
            <div>{{ form.vars.data.content|markdown_to_html }}</div>
        </div>
    {% endif %}
{% endblock %}

{% block app_admin_voting_platform_designation_wordingRegulationPage_sonata_type_model_widget %}
    {{ form_widget(form) }}

    {% if form.vars.data and form.vars.data.content %}
        <div style="margin-top: 20px">
            <p><a href="{{ path('admin_app_cmsblock_edit', {id: form.vars.value}) }}">Modifier</a></p>
            <div>{{ form.vars.data.content|markdown_to_html }}</div>
        </div>
    {% endif %}
{% endblock %}

{% block app_admin_local_election_candidaciesGroups_entity_widget %}
    {% set local_election = form.parent.vars.value %}
    {% set candidacies_groups = local_election.candidaciesGroups %}

    {% if candidacies_groups is empty %}
        <p>Aucune(s) liste(s) renseignée(s) à date.</p>
    {% else %}
        <table class="table table-bordered table-striped sonata-ba-list">
            <thead>
            <tr class="sonata-ba-list-field-header">
                <th class="sonata-ba-list-field-header-text">Libellé</th>
                <th class="sonata-ba-list-field-header-text">Nombre de candidats</th>
                <th class="sonata-ba-list-field-header-text">Action</th>
            </tr>
            </thead>
            <tbody>
            {% for candidacy in candidacies_groups %}
                <tr>
                    <td class="sonata-ba-list-field sonata-ba-list-field-text">
                        Liste {{ loop.index }}
                    </td>
                    <td class="sonata-ba-list-field sonata-ba-list-field-text">
                        {{ candidacy.candidacies|length }} candidat(s)
                    </td>
                    <td class="sonata-ba-list-field sonata-ba-list-field-text">
                        <a href="{{ path('admin_app_localelection_candidaciesgroup_edit', {id: candidacy.id}) }}" target="_blank">
                            Voir le détail
                        </a>
                    </td>
                </tr>
            {% endfor %}
            </tbody>
        </table>
    {% endif %}
{% endblock %}

{% block app_admin_general_meeting_report_file_row %}
    {{ block('form_row') }}

    {% set general_meeting_report = form.parent.vars.data %}

    {% if general_meeting_report.hasFilePath() %}
        <div>
            <object type="{{ get_asset_mime_type(general_meeting_report.getFilePath()) }}" data="{{ path('asset_url', {path: general_meeting_report.getFilePath(), app_domain: app_renaissance_host}) }}" style="width:100%;height:100vh;max-height:700px">
                <div style="background: #2e2e2e;color:white;text-align:center;padding: 20px 0">
                    <p>Il semble que votre navigateur ne peut pas afficher ce fichier.</p>
                </div>
            </object>
        </div>
    {% endif %}

{% endblock %}
