{% extends 'base_renaissance.html.twig' %}

{% block page_title 'Adhésion' %}

{% block content %}
    <main class="bg-[#F4F4F7]">
        <header class="p-10">
            <a href="{{ path('app_renaissance_homepage') }}">
                <img src="{{ asset('/images/renaissance/logo-dark.svg') }}" class="h-4" alt="logo"/>
            </a>
        </header>

        <section class="flex flex-col justify-center items-center gap-8">
            <twig:Atoms:ReCard class="max-w-[540px] !sticky !rounded-t-0">
                <nav>
                    <ol class="breadcrumb">
                        <li>Adresse e-mail</li>
                        <li>Mes information</li>
                        <li>Légalités</li>
                        <li>Montant</li>
                    </ol>
                </nav>
            </twig:Atoms:ReCard>

            <h2 class="text-center font-bold text-2xl mb-10">
                Devenez membre de
                <span class="text-blue-500">Renaissance</span>
            </h2>

            <div class="p-6 bg-white bg-opacity-30 rounded-[32px] border border-zinc-200 flex-col justify-start items-start gap-6 inline-flex">

                {% form_theme form 'renaissance/forms/tailwind_form_theme.html.twig' %}

                {{ form_start(form) }}
                <div class="flex gap-8 flex-col">
                    <twig:Atoms:ReCard class="max-w-[500px]" x-data="stepOne">
                        <template x-if="generalNotification">
                            <twig:Atoms:ReParagraphStatus
                                    xSyncStatus="generalNotification.status"
                                    x-text="generalNotification.message"/>
                        </template>
                        {{ form_row(form.email, {
                            attr: {
                                placeholder: 'Adresse mail',
                                validate:"['required', 'email']",
                                autocomplete: 'email',
                                onCheck:"setFieldValid('email')",
                            }, label: false}) }}
                        {{ form_row(form.consentDataCollect, {
                            attr:{
                                validate: "['required']",
                                onCheck:"setFieldValid('consentDataCollect')",
                            }, label: 'Je consent au traitement de mes données personnelles', icon: 'info', iconToolTip:'Lorem ipsum dolor sit amet consectetur. Diam facilisis nulla ut ut diam cursus auctor mauris nunc. Vel sit orci id at mi aliquam tellus bibendum. Non amet lorem massa est. Netus elit mattis fermentum ornare senectus volutpat et. Lorem pellentesque mattis vel hendrerit morbi ultricies enim sollicitudin. Pretium ante duis tempus nulla quis vulputate tellus.Lectus sed curabitur tortor leo faucibus elit commodo ultrices adipiscing. Felis quis convallis praesent odio orci sollicitudin in pulvinar. Sem convallis urna malesuada ante interdum. Ipsum tellus et sapien congue ac leo enim at risus. Ut mattis congue nunc suspendisse quis ante curabitur nibh. Luctus donec morbi commodo lacinia nulla ullamcorper ut vulputate enim.' }) }}

                        <div class=" mb-4 w-full re-field-frame !h-auto cursor-pointer"
                             x-on:click="dom('.frc-button').click()">
                            {% include 'renaissance/partials/friendly-captcha.html.twig' %}
                        </div>
                        <twig:Molecules:ReButton
                                color="blue"
                                value="J'adhère"
                                class="w-full"
                                x-on:click="handleOnSubmit($event, $dispatch)"
                                x-bind:disabled="!Object.values(fieldsValid).every(x=>x)"/>

                        <p class="text-center">
                            Vous préférez adhérer par voie postale ?<br/>
                            Télécharger le formulaire d’adhésion papier !
                        </p>

                        <div class="flex justify-center items-center">
                            <twig:Molecules:ReButton
                                    tag="a"
                                    href="https://storage.googleapis.com/parti-renaissance.fr/Renaissance-Bulletin-adhesion.pdf"
                                    target="_blank"
                                    color="not-fill"
                                    value="Télécharger"
                                    class="!w-auto"
                                    icon="download"
                            />
                        </div>
                        <hr/>

                        <twig:Atoms:ReParagraphStatus status="info">
                            Une question relative à l’adhésion ? <br>
                            Écrivez-nous à <a class="text-ui_blue-50" href="mailto:adherents@parti-renaissance.fr">adherents@parti-renaissance.fr</a>
                        </twig:Atoms:ReParagraphStatus>

                    </twig:Atoms:ReCard>

                    <twig:Atoms:ReCard class="max-w-[500px]" id="step_2">
                        {{ form_row(form.civility, {label: false}) }}
                        {{ form_row(form.firstName, {label: false, attr: {placeholder: 'Prénom'}}) }}
                        {{ form_row(form.lastName, {label: false, attr: {placeholder: 'Nom'}}) }}
                        {{ form_row(form.address, {label: false}) }}
                    </twig:Atoms:ReCard>

                    <twig:Atoms:ReCard class="max-w-[500px]">
                        {{ form_row(form.amount) }}
                        {{ form_row(form.save) }}
                    </twig:Atoms:ReCard>
                </div>
                <input type="hidden" id="email-validation-token" value="{{ email_validation_token }}"/>
            </div>
            {{ form_end(form) }}
        </section>
    </main>
{% endblock %}

{% block final_javascripts %}
    <script type="module" src="{{ asset('js/friendlycaptcha.widget-0.9.14.module.min.js') }}" async defer></script>

    <script type="text/javascript" defer>
        // @ts-check
        // import { captureException } from '@sentry/browser';

        document.addEventListener('alpine:init', () => {
            Alpine.data('stepOne', () => ({
                fieldsValid: {
                    email: false,
                    consentDataCollect: false,
                    captcha: false,
                },
                generalNotification: null,
                captchaToken: null,

                init() {
                    this.$nextTick(() => {
                        friendlyChallenge.autoWidget.opts.doneCallback = (token) => {
                            this.captchaToken = token;
                            this.fieldsValid.captcha = true;
                        };
                    });
                },

                setFieldValid: function (field) {
                    return (value) => {
                        this.fieldsValid[field] = value;
                        return this.fieldsValid;
                    };
                },

                handleNextStep: function () {
                    const step2 = dom('#step_2');
                    step2.scrollIntoView({
                        behavior: 'smooth',
                        block: 'center',
                        inline: 'nearest'
                    });
                },

                _postPersistEmail: async function () {
                    return fetch('/api/persist-email', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            email: document.querySelector('#membership_request_email').value,
                            recaptcha: this.captchaToken
                        }),
                    });
                },

                _handleBadRequest: function ($dispatch) {
                    return (data) => data.violations.forEach(x => {
                        console.log(x);
                        if (x.property === 'email') {
                            console.log($dispatch);
                            $dispatch('x-validate:membership_request_email', {
                                status: data.status,
                                message: x.message
                            });
                        }

                        if (x.property === 'recaptcha') {
                            this.generalNotification = {
                                status: data.status,
                                message: x.message
                            };
                        }
                    });
                },

                handleOnSubmit: async function (e, $dispatch) {
                    e.preventDefault();
                    this._postPersistEmail()
                        .then((response) => {
                            if (response.ok) {
                                this.handleNextStep();
                            } else {
                                response.json()
                                    .then(this._handleBadRequest($dispatch));
                            }
                        });
                    // .catch((error) => {
                    //     captureException(error, {
                    //         tags: {
                    //             component: 'membership-request',
                    //             step: 'persist-email'
                    //         }
                    //     });
                    // });
                }
            }));
        });
    </script>
{% endblock %}
